export default function form(name_input, desire_input) {
    const form = document.querySelector(".form");

  form.addEventListener("submit", async (event) => {
    event.preventDefault();

    const name = name_input.value.trim();
    const desire = desire_input.value.trim();

    if (!name || !desire) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏ –æ–±–∞ –ø–æ–ª—è!");
      return;
    }
    request_to_back(name, desire);
});
}

async function request_to_back(name, desire) {
    try {
      const response = await fetch("http://127.0.0.1:8000/add_feeling", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ name, desire }),
      });

      console.log(response);

      if (true) {
        const main = document.querySelector("main");
        main.innerHTML = "";

        const success = document.createElement("div");
        const succesText = document.createElement("h1");

        succesText.dataset.i18n = "success_message";
        succesText.textContent = `${name}, –∂–µ–ª–∞–µ–º —Ç–µ–±–µ —Ö–æ—Ä–æ—à–µ–≥–æ –≤–µ—á–µ—Ä–∞! üòä`;

        success.appendChild(succesText);
        main.appendChild(success);

        localStorage.clear();
      } else {
        alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ.");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã:", error);
      alert("–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º.");
    }
}